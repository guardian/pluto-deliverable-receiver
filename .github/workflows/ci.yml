name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    steps:
      - name: Hello world action step
        id: hello
        uses: fredex42/hello-world-javascript-action@v1.0
        with:
          who-to-greet: 'Mona the Octocat'
      # Use the output from the `hello` step
      - name: Get the output time
        run: echo "The time was ${{ steps.hello.outputs.time }}"

  build:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
      
    steps:
    - uses: actions/checkout@v2

    - name: Make GITHUB_RUN_NUMBER env var available outside of shells
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: bash
      run: |
        echo GITHUB_RUN_NUMBER=$GITHUB_RUN_NUMBER>> $GITHUB_ENV

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: GHA-build

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build
      run: GOOS=linux GOARCH=amd64 go build -v -o deliverable-receiver.linux64

    - name: Debug
      run: echo $PWD; ls -lhd deliverable-receiver*

    - name: Test
      run: go test -v ./...

    - name: ECR Login
      run: aws ecr get-login-password --region ***REMOVED*** | docker login --username AWS --password-stdin ***REMOVED***.dkr.ecr.***REMOVED***.amazonaws.com
  
    - name: Build and push Docker images
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b
      uses: docker/build-push-action@v2.9.0
      with:
        tags: ${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.***REMOVED***.amazonaws.com/deliverable-receiver:${{ env.GITHUB_RUN_NUMBER }}
        push: true
        #seems you need to set this explicitly unless all paths in the Dockerfile are relative
        context: .

#  - name: Get commit timestamp
#    uses: actions/github-script@0.3.0
#    id: author-date
#    with:
#      github-token: ${{secrets.GITHUB_TOKEN}}
#      script: |
#        const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
#        return commit_details.data.author.date
#
#  - name: Get commit title
#    uses: actions/github-script@0.3.0
#    id: commit-title
#    with:
#      github-token: ${{secrets.GITHUB_TOKEN}}
#      script: |
#        const commit_details = await github.git.getCommit({owner: context.repo.owner, repo: context.repo.repo, commit_sha: context.sha});
#        return commit_details.data.title
#
#    - name: Generate build report
#      run: .github/build-info.sh
#      env:
#        CI_COMMIT_TIMESTAMP=${{ steps.author-date.outputs.result }}
#        CI_COMMIT_TITLE=${{ steps.commit-title.outputs.result }}
#
#    - name: Upload build report
#      uses: actions/upload-artifact@v3
#      with:
#        name: code-coverage-report
#        path: output/test/code-coverage.html