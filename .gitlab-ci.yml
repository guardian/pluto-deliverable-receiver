stages:
  - buildntest
  - upload

golang:
  image: golang:1.15-alpine
  stage: buildntest
  script:
    - apk add alpine-sdk
    - go test
    - GOOS=linux GOARCH=amd64 go build -o deliverable-receiver.linux64
  artifacts:
    paths:
      - deliverable-receiver.linux64

upload:
  image: docker:19.03.11
  stage: upload
  services:
    - docker:dind
  script:
    - docker build . -t guardianmultimedia/deliverable-receiver:$CI_PIPELINE_IID
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PAT}"
    - docker push guardianmultimedia/deliverable-receiver:$CI_PIPELINE_IID
    - "echo ci_commit_branch: ${CI_COMMIT_BRANCH} >> build-info.yaml"
    - "echo ci_commit_ref_name: ${CI_COMMIT_REF_NAME} >> build-info.yaml"
    - "echo ci_commit_sha: ${CI_COMMIT_SHA} >> build-info.yaml"
    - "echo ci_commit_timestamp: ${CI_COMMIT_TIMESTAMP} >> build-info.yaml"
    - "echo ci_commit_title: ${CI_COMMIT_TITLE} >> build-info.yaml"
    - "echo ci_job_url: ${CI_JOB_URL} >> build-info.yaml"
    - "echo ci_project_name: ${CI_PROJECT_NAME} >> build-info.yaml"
    - "echo ci_merge_request_project_url: ${CI_MERGE_REQUEST_PROJECT_URL} >> build-info.yaml"
    - "echo ci_merge_request_title: ${CI_MERGE_REQUEST_TITLE} >> build-info.yaml"
    - "echo ci_pipeline_iid: ${CI_PIPELINE_IID} >> build-info.yaml"
    - "echo built_image: guardianmultimedia/deliverable-receiver:$CI_PIPELINE_IID >> build-info.yaml"
  artifacts:
    paths:
      - build-info.yaml
